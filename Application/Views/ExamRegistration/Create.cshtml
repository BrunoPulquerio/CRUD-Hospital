@model Service.ViewModels.ExamRegistrationViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Registra novo Exame</h1>

<hr />
@if (Model != null)
{
    @if (!Model.IsValid)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">


            <b>Erros de Validação</b> <br />
            @foreach (var alt in Model.Erros)
            {
                <p>@alt</p>
            }
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
}


<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Note" class="control-label"></label>
                <input asp-for="Note" class="form-control" />
                <span asp-validation-for="Note" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TypeOfExamId" class="control-label"></label>
                @Html.DropDownList("TypeOfExamId", null, new { @class = "form-control" })
                <span asp-validation-for="TypeOfExamId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Voltar</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
